#!/usr/bin/python
# -*- coding: utf-8 -*-
# Copyright 2019 Red Hat Inc.
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

##############################################
################# WARNING ####################
##############################################
###
### This file is auto generated by the resource
###   module builder playbook.
###
### Do not edit this file manually.
###
### Changes to this file will be over written
###   by the resource module builder.
###
### Changes should be made in the model used to
###   generate this file or in the resource module
###   builder template.
###
##############################################
##############################################
##############################################

"""
The module file for ios_interfaces
"""

from __future__ import absolute_import, division, print_function
from ansible.module_utils.basic import AnsibleModule
from ansible.module_utils.ios.config.interfaces.interfaces import Interfaces

ANSIBLE_METADATA = {'metadata_version': '1.1',
                    'status': [u'preview'],
                    'supported_by': [u'Ansible Network']}


DOCUMENTATION = """
---
module: ios_interfaces
version_added: 2.9
short_description: Manage Interface on Cisco IOS network devices.
description: Manage Interface on Cisco IOS network devices.
author: [u'Sumit Jaiswal (@justjais)']
options:
  config:
    description: The provided configuration
    suboptions:
      name:
        description:
        - Name of interface, i.e. GigabitEthernet0/2, loopback999.
        type: str
        required: true
      description:
        description:
        - Description of Interface.
        type: str
      enabled:
        description:
        - Interface link status.
        type: bool
        default: true
      speed:
        description:
        - Interface link speed. Applicable for ethernet interface only.
        type: str
      mtu:
        description:
        - Maximum size of transmit packet. Must be an number between 64 and 9600.
          Applicable for Ethernet interface only.
        type: str
      duplex:
        description:
        - Interface link status. Applicable for ethernet interface only.
        type: str
        default: auto
        choices: ['full', 'half', 'auto']
  state:
    choices:
    - merged
    - replaced
    - overridden
    - deleted
    default: merged
    description:
    - The state the configuration should be left in
    type: str
"""

EXAMPLES = """
---

# Using merged

- name: Configure Ethernet interfaces
  ios_interfaces:
    config:
      - name: GigabitEthernet0/2
        description: 'Configured by Ansible'
        enabled: True
      - name: GigabitEthernet0/3
        description: 'Configured by Ansible Network'
        enabled: False
        duplex: full
    operation: merged

# Using replaced

- name: Configure following interfaces and replace their existing config
  ios_interfaces:
    config:
      - name: GigabitEthernet0/2
        description: Configured by Ansible
        enabled: True
        mtu: 2000
      - name: GigabitEthernet0/3
        description: 'Configured by Ansible Network'
        enabled: False
        duplex: auto
    operation: replaced

# Using overridden

- name: Override interfaces
  ios_interfaces:
    config:
      - name: GigabitEthernet0/2
        description: 'Configured by Ansible'
        enabled: True
        duplex: auto
      - name: GigabitEthernet0/3
        description: 'Configured by Ansible Network'
        enabled: False
        speed: 1000
    operation: overridden

# Using deleted

- name: Delete IOS interfaces as in given arguments
  ios_interfaces:
    config:
      - name: GigabitEthernet0/2
        description: 'Configured by Ansible'
      - name: GigabitEthernet0/3
        description: 'Configured by Ansible Network'
        mtu: 1800
    operation: deleted

"""

RETURN = """
before:
  description: The configuration prior to the model invocation
  returned: always
  sample: The configuration returned will alwys be in the same format of the paramters above.
after:
  description: The resulting configuration model invocation
  returned: when changed
  sample: The configuration returned will alwys be in the same format of the paramters above.
commands:
  description: The set of commands pushed to the remote device
  returned: always
  type: list
  sample: ['command 1', 'command 2', 'command 3']
"""


def main():
    """
    Main entry point for module execution

    :returns: the result form module invocation
    """
    module = AnsibleModule(argument_spec=Interfaces.argument_spec,
                           supports_check_mode=True)

    result = Interfaces(module).execute_module()
    module.exit_json(**result)

if __name__ == '__main__':
    main()

